<?php
/**
 * Bil24 API Analyzer Tool
 * –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
$possible_urls = [
    'https://api.bil24.com',
    'https://bil24.com/api', 
    'https://api.bil24.ru',
    'https://bil24.ru/api',
    // –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL –∑–¥–µ—Å—å
];

$test_data = [
    'locale' => 'en',
    'command' => 'GET_ALL_ACTIONS',
    'fid' => 2558, // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π FID
    'token' => 'your_token_here' // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
];

echo "<h2>üîç Bil24 API Analysis Tool</h2>\n";

foreach ($possible_urls as $base_url) {
    echo "<h3>Testing: {$base_url}</h3>\n";
    
    // –¢–µ—Å—Ç 1: POST —Å JSON –≤ —Ç–µ–ª–µ
    echo "<strong>Test 1: POST with JSON body</strong><br>\n";
    test_api_call($base_url, $test_data, 'POST', 'json');
    
    // –¢–µ—Å—Ç 2: POST —Å form data
    echo "<strong>Test 2: POST with form data</strong><br>\n";
    test_api_call($base_url, $test_data, 'POST', 'form');
    
    // –¢–µ—Å—Ç 3: GET —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    echo "<strong>Test 3: GET with parameters</strong><br>\n";
    test_api_call($base_url, $test_data, 'GET', 'query');
    
    echo "<hr>\n";
}

function test_api_call($base_url, $data, $method = 'POST', $format = 'json') {
    $url = $base_url;
    
    $args = [
        'method' => $method,
        'timeout' => 10,
        'headers' => []
    ];
    
    if ($method === 'POST') {
        if ($format === 'json') {
            $args['body'] = json_encode($data);
            $args['headers']['Content-Type'] = 'application/json';
        } else {
            $args['body'] = http_build_query($data);
            $args['headers']['Content-Type'] = 'application/x-www-form-urlencoded';
        }
    } else {
        $url .= '?' . http_build_query($data);
    }
    
    echo "URL: {$url}<br>\n";
    echo "Method: {$method}<br>\n";
    echo "Body: " . ($args['body'] ?? 'None') . "<br>\n";
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞)
    echo "Status: <span style='color: orange;'>SIMULATED - Replace with real request</span><br>\n";
    
    // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
    /*
    $response = wp_remote_request($url, $args);
    
    if (is_wp_error($response)) {
        echo "Error: " . $response->get_error_message() . "<br>\n";
    } else {
        $code = wp_remote_retrieve_response_code($response);
        $body = wp_remote_retrieve_body($response);
        
        echo "Status: {$code}<br>\n";
        echo "Response: " . substr($body, 0, 200) . "...<br>\n";
    }
    */
    
    echo "<br>\n";
}

echo "<h3>üìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Ä—É—á–Ω—É—é:</h3>\n";
echo "<ol>\n";
echo "<li><strong>–ë–∞–∑–æ–≤—ã–π URL:</strong> –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é Bil24 –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ API endpoint</li>\n";
echo "<li><strong>–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è:</strong> –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</li>\n";
echo "<li><strong>–í–µ—Ä—Å–∏—è API:</strong> –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é</li>\n";
echo "<li><strong>Headers:</strong> –ú–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏</li>\n";
echo "</ol>\n";

echo "<h3>üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>\n";
echo "<pre>\n";
echo "POST [REAL_BIL24_URL]\n";
echo "Content-Type: application/json\n\n";
echo json_encode($test_data, JSON_PRETTY_PRINT) . "\n";
echo "</pre>\n";
?>