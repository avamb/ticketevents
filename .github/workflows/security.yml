name: Security & Code Quality

on:
  schedule:
    - cron: '0 2 * * 1' # Run every Monday at 2 AM
  workflow_dispatch: # Allow manual trigger

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: curl, json, zip, mbstring
          tools: composer:v2
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
        
      - name: Run security audit
        run: composer audit --format=json > security-audit.json
        continue-on-error: true
        
      - name: Upload security audit results
        uses: actions/upload-artifact@v3
        with:
          name: security-audit
          path: security-audit.json
          
  code-quality:
    name: Extended Code Quality Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: curl, json, zip, mbstring
          tools: composer:v2, phpmd, pdepend
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
        
      - name: Run PHPStan with strict rules
        run: |
          composer run-script phpstan -- --error-format=json > phpstan-results.json
        continue-on-error: true
        
      - name: PHP Mess Detector
        run: |
          phpmd includes text cleancode,codesize,controversial,design,naming,unusedcode > phpmd-results.txt
        continue-on-error: true
        
      - name: Upload analysis results
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-reports
          path: |
            phpstan-results.json
            phpmd-results.txt

  wordpress-compatibility:
    name: WordPress Plugin Compatibility Check
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        wordpress-version: ['5.9', '6.0', '6.1', '6.2', '6.3', '6.4']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: curl, json, zip, mbstring
          tools: composer:v2
          
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
        
      - name: Check WordPress compatibility
        run: |
          # Basic compatibility check - ensure no deprecated WordPress functions
          grep -r "wp_debug\|deprecated\|WP_DEBUG" includes/ || echo "No deprecated WordPress functions found"
          
          # Check for WordPress version requirements
          php -r "
          \$plugin_file = 'bil24-connector.php';
          \$content = file_get_contents(\$plugin_file);
          if (preg_match('/Requires at least:\s*([0-9.]+)/', \$content, \$matches)) {
            \$required_version = \$matches[1];
            \$test_version = '${{ matrix.wordpress-version }}';
            if (version_compare(\$test_version, \$required_version, '<')) {
              echo 'WordPress version \$test_version is below required \$required_version';
              exit(1);
            }
            echo 'WordPress version compatibility: OK';
          } else {
            echo 'Warning: No WordPress version requirement found in plugin header';
          }
          " 